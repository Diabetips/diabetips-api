"/v1/auth/authorize":
  get:
    tags:
      - "Authentication"
    summary: "OAuth 2.0 authorize endpoint"
    description: |
      Endpoint used for the Authorization Code and Implicit grants of the OAuth 2 API.

      This route must not be directly requested by the client, instead, the client should redirect the user to this
      endpoint. Once the authorization process is complete, the user will be redirected back to the client's redirect or
      callback URI with the results.

       * [RFC 6749 section 4.1.1: OAuth 2.0 - Authorization Code Grant - Authorization Request](https://tools.ietf.org/html/rfc6749#section-4.1.1)
       * [RFC 6749 section 4.2.1: OAuth 2.0 - Implicit Grant - Authorization Request](https://tools.ietf.org/html/rfc6749#section-4.2.1)
    parameters:
      - in: query
        name: response_type
        description: "Type of response needed"
        required: true
        schema:
          type: string
          enum: [code, token]
      - in: query
        name: client_id
        description: "Client ID"
        required: true
        schema:
          type: string
      - in: query
        name: redirect_uri
        description: "URI callback for the response"
        schema:
          type: string
          example: "https://client.example.com/cb"
      - in: query
        name: scope
        description: "List of scopes to authorize, separated with spaces"
        schema:
          type: string
          example: "profile:write notifications"
      - in: query
        name: state
        description: "Opaque value to maintain a state between this request and the callback. This value will be included in the callback redirection URI."
        schema:
          type: string
          example: "xyz"
    responses:
      302:
        description: "Callback redirection"
        headers:
          Location:
            schema:
              type: string
              example: https://client.example.com/cb?code=1a673907-94ed-43d8-9fa8-52008687ec1d&state=xyz
"/v1/auth/token":
  post:
    security:
      - Client: []
    tags:
      - "Authentication"
    summary: "OAuth 2.0 token endpoint"
    description: |
      Endpoint used for the Authorization Code and Resource Owner Password Credentials grants of the OAuth 2 API as well
      as refreshing access tokens.

       * [RFC 6749 section 4.1.3: OAuth 2.0 - Authorization Code Grant - Token Request](https://tools.ietf.org/html/rfc6749#section-4.1.3)
       * [RFC 6749 section 4.3.2: OAuth 2.0 - Password Grant - Token Request](https://tools.ietf.org/html/rfc6749#section-4.3.2)
       * [RFC 6749 section 6: OAuth 2.0 - Refreshing an Access Token](https://tools.ietf.org/html/rfc6749#section-6)
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            oneOf:
              - $component: "schemas:oauth.yml:OAuth2AuthCodeGrant"
              - $component: "schemas:oauth.yml:OAuth2PasswordGrant"
              - $component: "schemas:oauth.yml:OAuth2Refresh"
            discriminator:
              propertyName: "grant_type"
              mapping:
                authorization_code: "#/components/schemas/OAuth2AuthCodeGrant"
                password: "#/components/schemas/OAuth2PasswordGrant"
                refresh_token: "#/components/schemas/OAuth2Refresh"
    responses:
      200:
        description: "Token response"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                access_token:
                  type: "string"
                  description: "The access token to use in requests"
                  example: "eyJhbGciOi...2ConSMIkRdV1dinpdYYw"
                token_type:
                  type: "string"
                  description: "The token type"
                  example: "bearer"
                expires_in:
                  type: "number"
                  description: "The access token expiration time in seconds from the time of issuance"
                  example: 3600
                refresh_token:
                  type: "string"
                  description: "Refresh token to use when the access token expires"
                  example: "NzEzYjNjMjItY2...hYTE3LTE4ZTMyYjE1MzU4Mg=="
      400:
        description: "Error response"
        content:
          application/json:
            schema:
              type: "object"
              properties:
                error:
                  type: "string"
                  description: "Standard OAuth 2 error code"
                  example: "invalid_grant"
                error_description:
                  type: "string"
                  description: "Description of the error"
                  example: "Invalid authorization code"
"/v1/auth/revoke":
  post:
    security:
      - Client: []
    tags:
      - "Authentication"
    summary: "Token revocation endpoint"
    description: |
      Revoke an access token and any other (access or refresh) tokens associated with it.

      Only the client that the token was issued to may revoke it.
    requestBody:
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: "object"
            properties:
              "token":
                type: "string"
                example: "eyJhbGciOi...2ConSMIkRdV1dinpdYYw"
    responses:
      200:
        description: "Token revocation request processed"
"/v1/auth/reset-password":
  post:
    security:
      - Client:
        - "auth:reset"
    tags:
      - "Authentication"
    summary: "Reset account password"
    description: |
      Reset the password of the account with the specified email. A new password will be randomly generated and sent to
      the user's email.

      For privacy reasons, errors **won't** be reported (e.g. if the specified email is not associated with any account).
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: "object"
            properties:
              "email":
                $component: "schemas:user.yml:User/properties/email"
    responses:
      202:
        description: "The password reset request is being processed"
